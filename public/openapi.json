{
  "openapi": "3.0.0",
  "info": {
    "title": "Field Hockey API",
    "version": "1.0.0",
    "description": "API documentation for Field Hockey Dashboard (v1)."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    },
    {
      "url": "https://admin.leadfieldhockey.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthLoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        },
        "required": ["email", "password"]
      },
      "AuthLoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "email": { "type": "string" },
              "name": { "type": "string" },
              "role": { "type": "string" }
            }
          }
        }
      },
      "Video": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "videoUrl": { "type": "string" },
          "thumbnail": { "type": "string" },
          "duration": { "type": "integer" }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "thumbnail": { "type": "string" },
          "sessionIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "likesCount": {
            "type": "integer",
            "description": "Total number of users who favorited this playlist"
          }
        }
      },
      "Subtitle": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "sessionId": { "type": "string" },
          "language": { "type": "string", "description": "ISO-639-1 code" },
          "label": { "type": "string" },
          "format": { "type": "string", "enum": ["vtt", "srt"] },
          "url": { "type": "string" },
          "uploadedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "color": { "type": "string", "description": "Hex color (#RRGGBB)" },
          "icon": { "type": "string" }
        },
        "required": ["name"]
      },
      "CategoryFilterMapping": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "code": { "type": "string" },
          "label": { "type": "string" },
          "ui_type": { "type": "string" },
          "is_public": { "type": "boolean" }
        }
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login and obtain JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthLoginRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthLoginResponse" }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user and obtain JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "name": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["email", "name", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthLoginResponse" }
              }
            }
          },
          "400": { "description": "Email exists or bad data" }
        }
      }
    },
    "/api/v1/videos": {
      "get": {
        "tags": ["Videos"],
        "summary": "List videos",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 9 }
          }
        ],
        "responses": {
          "200": {
            "description": "Video list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Video" }
                    },
                    "page": { "type": "integer" },
                    "totalPages": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Videos"],
        "summary": "Create video",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Video" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" }
        }
      }
    },
    "/api/v1/videos/{id}": {
      "get": {
        "tags": ["Videos"],
        "summary": "Get video by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Video" },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "tags": ["Videos"],
        "summary": "Update video",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Video" }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Videos"],
        "summary": "Delete video",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/playlists": {
      "get": {
        "tags": ["Playlists"],
        "summary": "List playlists",
        "responses": {
          "200": {
            "description": "Playlist list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Playlist" }
                    },
                    "page": { "type": "integer" },
                    "totalPages": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Playlists"],
        "summary": "Create playlist",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Playlist" }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/api/v1/playlists/{id}": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Get playlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Playlist" },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "tags": ["Playlists"],
        "summary": "Update playlist",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Playlist" }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Playlists"],
        "summary": "Delete playlist",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/playlists/{id}/favorite": {
      "post": {
        "tags": ["Playlists"],
        "summary": "Mark playlist as favorite",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "userId": { "type": "string" } },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Favorited" },
          "400": { "description": "Bad request" }
        }
      },
      "delete": {
        "tags": ["Playlists"],
        "summary": "Remove playlist favorite",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "userId": { "type": "string" } },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Unfavorited" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/v1/playlists/{id}/likes": {
      "get": {
        "tags": ["Playlists"],
        "summary": "List users who favorited playlist",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "name": { "type": "string" },
                      "email": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/videos/search": {
      "get": {
        "tags": ["Videos"],
        "summary": "Search videos with filters",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Text to search in title or description"
          },
          {
            "name": "category",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Category ID"
          },
          {
            "name": "difficulty",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["beginner", "intermediate", "advanced", "all"],
              "default": "all"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["all", "published", "draft"],
              "default": "all"
            }
          },
          {
            "name": "minDuration",
            "in": "query",
            "schema": { "type": "integer", "minimum": 0 },
            "description": "Minimum duration in seconds"
          },
          {
            "name": "maxDuration",
            "in": "query",
            "schema": { "type": "integer", "minimum": 0 },
            "description": "Maximum duration in seconds"
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 9 }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Video" }
                    },
                    "page": { "type": "integer" },
                    "totalPages": { "type": "integer" },
                    "totalItems": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/playlists/search": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Search playlists with filters",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Text to search in name or description"
          },
          {
            "name": "category",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Playlist category"
          },
          {
            "name": "audience",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["all", "beginner", "intermediate", "advanced"],
              "default": "all"
            },
            "description": "Target audience"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["all", "published", "draft"],
              "default": "all"
            }
          },
          {
            "name": "minDuration",
            "in": "query",
            "schema": { "type": "integer", "minimum": 0 },
            "description": "Minimum estimated duration in minutes"
          },
          {
            "name": "maxDuration",
            "in": "query",
            "schema": { "type": "integer", "minimum": 0 },
            "description": "Maximum estimated duration in minutes"
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 20 }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Playlist" }
                    },
                    "page": { "type": "integer" },
                    "totalPages": { "type": "integer" },
                    "totalItems": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/uploads/subtitle": {
      "post": {
        "tags": ["Uploads"],
        "summary": "Upload subtitle file",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" },
                  "sessionId": { "type": "string" },
                  "language": { "type": "string" },
                  "label": { "type": "string" }
                },
                "required": ["file", "sessionId", "language", "label"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "url": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{id}/subtitles": {
      "get": {
        "tags": ["Subtitles"],
        "summary": "List subtitles for a session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Subtitle list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Subtitle" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Subtitles"],
        "summary": "Add subtitle metadata to session",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": { "type": "string" },
                  "label": { "type": "string" },
                  "format": { "type": "string", "enum": ["vtt", "srt"] },
                  "url": { "type": "string" }
                },
                "required": ["language", "label", "url"]
              }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/api/sessions/{id}/subtitles/{subtitleId}": {
      "delete": {
        "tags": ["Subtitles"],
        "summary": "Delete subtitle",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "subtitleId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "Deleted" } }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "List categories",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Text to search in name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Category list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Category" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Category" },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/categories/{id}/filters": {
      "get": {
        "tags": ["Categories"],
        "summary": "List filters for category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Filter list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryFilterMapping"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Replace category filter mappings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mappings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filterId": { "type": "integer" },
                        "isPublic": { "type": "boolean" }
                      },
                      "required": ["filterId", "isPublic"]
                    }
                  }
                },
                "required": ["mappings"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Category filters updated" } }
      }
    }
  }
}
